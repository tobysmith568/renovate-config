{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": ["config:recommended"],
  "labels": ["dependencies"],
  "dependencyDashboard": false,
  "rangeStrategy": "replace",
  "automergeType": "branch",
  "minimumReleaseAge": "3",
  "stopUpdatingLabel": "parked",
  "semanticCommits": "disabled",
  "packageRules": [
    // # Docker Base Images

    {
      "groupName": "Docker: Node.JS",
      "matchCategories": ["docker"],
      "matchPackagePatterns": ["node"],
      "allowedVersions": "^18",
      "automerge": true
    },
    
    // # Package Managers

    {
      "groupName": "Package Managers",
      "matchManagers": ["npm"],
      "matchPackagePatterns": ["^pnpm$"],
      "allowedVersions": "^10",
      "automerge": true
    },

    // # npm Packages

    // ## Types

    {
      "groupName": "npm: Types",
      "matchManagers": ["npm"],
      "matchPackagePrefixes": ["@types/"],
      "automerge": true
    },
    {
      "groupName": "npm: Node.JS Types",
      "matchManagers": ["npm"],
      "matchPackageNames": ["@types/node"],
      "allowedVersions": "^18",
      "automerge": true
    },

    // ## Linting

    {
      "groupName": "npm: Prettier",
      "matchManagers": ["npm"],
      "matchPackageNames": ["prettier", "@tobysmith568/prettier-config"],
      "matchPackagePrefixes": ["@prettier/"],
      "matchPackagePatterns": ["prettier-plugin"],
      "automerge": true
    },
    {
      "groupName": "npm: ESLint",
      "matchManagers": ["npm"],
      "matchPackageNames": ["eslint", "@tobysmith568/eslint-config"],
      "matchPackagePrefixes": ["@eslint/", "@typescript-eslint/"],
      "matchPackagePatterns": ["eslint-plugin", "eslint-config"],
      "automerge": true
    },
    {
      "groupName": "npm: CSpell",
      "matchManagers": ["npm"],
      "matchPackageNames": ["cspell"],
      "matchPackagePrefixes": ["@cspell/"],
      "automerge": true
    },

    // ## Development

    {
      "groupName": "npm: React",
      "matchManagers": ["npm"],
      "matchPackageNames": ["@types/react", "@types/react-dom", "react", "react-dom"],
      "automerge": true
    },
    {
      "groupName": "npm: Next.JS",
      "matchManagers": ["npm"],
      "matchPackageNames": ["next", "@next/font"],
      "automerge": true
    },
    {
      "groupName": "npm: TypeScript",
      "matchManagers": ["npm"],
      "matchPackageNames": ["typescript"],
      "automerge": true
    },
    {
      "groupName": "npm: SWC",
      "matchManagers": ["npm"],
      "matchPackagePrefixes": ["@swc/"],
      "automerge": true
    },
    {
      "groupName": "npm: Commander",
      "matchManagers": ["npm"],
      "matchPackageNames": ["commander", "@commander-js/extra-typings"]
    },

    // ## Testing

    {
      "groupName": "npm: Jest",
      "matchManagers": ["npm"],
      "matchPackagePatterns": ["jest"],
      "automerge": true
    },
    {
      "groupName": "npm: Cypress",
      "matchManagers": ["npm"],
      "matchPackagePatterns": ["cypress"],
      "automerge": true
    },
    {
      "groupName": "npm: Testing Library",
      "matchManagers": ["npm"],
      "matchPackagePrefixes": ["@testing-library/"],
      "automerge": true
    },
    {
      "groupName": "npm: Vitest",
      "matchManagers": ["npm"],
      "matchPackagePatterns": ["vitest"],
      "automerge": true
    },

    // ## Other

    {
      "groupName": "npm: Disable Nx Monorepos",
      "matchManagers": ["npm"],
      "matchPackagePatterns": ["^nx$", "^@nx/", "^@nrwl/"],
      "enabled": false
    },

    // # NuGet Packages

    // ## Development

    {
      "groupName": "NuGet: Microsoft (Development)",
      "matchManagers": ["nuget"],
      "matchPackagePrefixes": ["Microsoft.Extensions.", "Microsoft.AspNetCore."],
      "automerge": true
    },

    // ## Testing

    {
      "groupName": "Nuget: Microsoft (Testing)",
      "matchManagers": ["nuget"],
      "matchPackageNames": ["Microsoft.NET.Test.Sdk"],
      "automerge": true
    },
    {
      "groupName": "Nuget: NUnit",
      "matchManagers": ["nuget"],
      "matchPackageNames": ["NUnit", "NUnit3TestAdapter"],
      "automerge": true
    },
    {
      "groupName": "Nuget: FluentAssertions",
      "matchManagers": ["nuget"],
      "matchPackageNames": ["FluentAssertions"],
      "automerge": true
    },
    {
      "groupName": "Nuget: Coverlet",
      "matchManagers": ["nuget"],
      "matchPackageNames": ["coverlet.collector"],
      "automerge": true
    },

    // # GitHub Actions

    {
      "groupName": "GitHub Actions: Checkout",
      "matchPackageNames": ["actions/checkout"],
      "automerge": true
    },
    {
      "groupName": "GitHub Actions: Download Artifact",
      "matchPackageNames": ["actions/download-artifact"],
      "automerge": true
    },
    {
      "groupName": "GitHub Actions: Deploy Pages",
      "matchPackageNames": ["actions/deploy-pages"],
      "automerge": true
    },
    {
      "groupName": "GitHub Actions: DotNet",
      "matchPackageNames": ["actions/setup-dotnet"],
      "automerge": true
    },
    {
      "groupName": "GitHub Actions: Setup Node",
      "matchPackageNames": ["actions/setup-node"],
      "automerge": true
    },
    {
      "groupName": "GitHub Actions: Upload Artifact",
      "matchPackageNames": ["actions/upload-artifact"],
      "automerge": true
    },
    {
      "groupName": "GitHub Actions: Upload Pages Artifact",
      "matchPackageNames": ["actions/upload-pages-artifact"],
      "automerge": true
    },
    {
      "groupName": "GitHub Actions: Codecov",
      "matchPackageNames": ["codecov/codecov-action"],
      "automerge": true
    },
    {
      "groupName": "GitHub Actions: CodeQL",
      "matchPackageNames": ["github/codeql-action"],
      "automerge": true
    }
  ]
}
